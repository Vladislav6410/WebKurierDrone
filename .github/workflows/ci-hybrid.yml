name: CI Hybrid (Python + Node)

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ci-hybrid-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # ================= PYTHON =================
  test-python:
    name: Python Lint & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect Python files
        id: detect_py
        run: |
          PY_FILES=$(git ls-files '*.py' | wc -l)
          echo "count=$PY_FILES" >> $GITHUB_OUTPUT

      - name: Setup Python
        if: steps.detect_py.outputs.count != '0'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps (requirements.txt)
        if: steps.detect_py.outputs.count != '0' && hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test tooling
        if: steps.detect_py.outputs.count != '0'
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8

      - name: Lint (flake8) — warnings only
        if: steps.detect_py.outputs.count != '0'
        continue-on-error: true
        run: flake8 . --max-line-length=100

      - name: Run tests (pytest)
        if: steps.detect_py.outputs.count != '0' && hashFiles('tests/**/*.py') != ''
        run: pytest -q tests

      - name: Skip note
        if: steps.detect_py.outputs.count == '0'
        run: echo "No Python files — skipping Python job."

  # ================ NODE (root/ui/web-admin) ================
  test-node:
    name: Node Lint & Tests (18, 20)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [18, 20]
        workdir: ['.', 'ui', 'web-admin']  # проверим три стандартные папки

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for package.json
        id: detect_node
        working-directory: ${{ matrix.workdir }}
        run: |
          if [ -f package.json ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi

      - name: Use Node.js ${{ matrix.node-version }}
        if: steps.detect_node.outputs.present == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ matrix.workdir }}/package-lock.json

      - name: Install dependencies
        if: steps.detect_node.outputs.present == 'true'
        working-directory: ${{ matrix.workdir }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint (eslint) — warnings only
        if: steps.detect_node.outputs.present == 'true'
        continue-on-error: true
        working-directory: ${{ matrix.workdir }}
        run: |
          if npm run | grep -q " lint"; then
            npm run lint
          elif [ -f .eslintrc.json ] || [ -f .eslintrc.js ] || [ -f .eslintrc.cjs ]; then
            npx eslint .
          else
            echo "No eslint config or script, skipping lint."
          fi

      - name: Run tests if present
        if: steps.detect_node.outputs.present == 'true'
        working-directory: ${{ matrix.workdir }}
        run: |
          if npm run | grep -q " test"; then
            npm test --silent
          elif [ -d test ] || [ -d tests ]; then
            npx jest --ci || npx vitest run || echo "No known test runner configured."
          else
            echo "No tests found, skipping."
          fi

      - name: Build if script exists
        if: steps.detect_node.outputs.present == 'true'
        working-directory: ${{ matrix.workdir }}
        run: |
          if npm run | grep -q " build"; then
            npm run build
          else
            echo "No build script, skipping."
          fi

      - name: Skip note
        if: steps.detect_node.outputs.present != 'true'
        run: echo "No package.json in ${{ matrix.workdir }} — skipping."