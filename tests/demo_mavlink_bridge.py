# -*- coding: utf-8 -*-
"""
–î–µ–º–æ-—Å–≤—è–∑–∫–∞: Autopilot ‚Üí MavlinkRadio (dry-run).
- –°–∏–º—É–ª–∏—Ä—É–µ–º CRUISE-—Ä–µ–∂–∏–º –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–∞
- –ü–µ—Ä–µ–¥–∞—ë–º –∫–æ–º–∞–Ω–¥—ã –≤ MAVLink-–∞–¥–∞–ø—Ç–µ—Ä (–ø–µ—á–∞—Ç—å PWM)
- –õ–æ–≥–∏—Ä—É–µ–º –≤ tests/out/mavlink_bridge_log.csv
–ó–∞–ø—É—Å–∫:
    python tests/demo_mavlink_bridge.py
"""

import os
from engine.agents.autopilot_ai.autopilot import Autopilot, _simulate_step
from radio_control.mavlink_radio import MavlinkRadio


def main():
    # 1) –ê–≤—Ç–æ–ø–∏–ª–æ—Ç
    ap = Autopilot()
    ap.set_mode("CRUISE", target_alt_m=40.0, target_airspeed_ms=18.0)

    # 2) MAVLink-—Ä–∞–¥–∏–æ (dry-run: True ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –±–µ–∑ –º–æ–¥–µ–º–∞/pymavlink)
    link = MavlinkRadio(conn_str="udpout:127.0.0.1:14550", dry_run=True)
    link.connect()
    link.wait_heartbeat()
    link.arm()

    # 3) –°–∏–º—É–ª—è—Ü–∏—è + –ø–µ—Ä–µ–¥–∞—á–∞ –∫–æ–º–∞–Ω–¥
    dt = 0.1
    steps = 200  # 20 —Å–µ–∫
    state = {"alt_m": 0.0, "airspeed": 0.0}

    # –ª–æ–≥
    os.makedirs(os.path.join("tests", "out"), exist_ok=True)
    log_path = os.path.join("tests", "out", "mavlink_bridge_log.csv")
    with open(log_path, "w", encoding="utf-8") as f:
        f.write("t,alt_m,airspeed,thrust,pitch,roll,yaw,failsafe\n")

        for i in range(steps):
            t = i * dt
            sensors = {"baro_alt_m": state["alt_m"], "airspeed": state["airspeed"]}
            sys = {"dt": dt, "battery_v": 23.6, "link_ok": True}

            cmd = ap.update(sensors, sys)
            link.apply_autopilot_cmd(cmd)  # ‚Üí –ø–µ—á–∞—Ç—å PWM –≤ –∫–æ–Ω—Å–æ–ª—å (dry-run)

            # –ª–æ–≥
            f.write("{:.2f},{:.3f},{:.3f},{:.3f},{:.3f},{:.3f},{:.3f},{}\n".format(
                t, state["alt_m"], state["airspeed"],
                cmd["thrust"], cmd["pitch"], cmd.get("roll", 0.0), cmd.get("yaw", 0.0),
                int(cmd["failsafe"])
            ))

            # –ø—Ä–æ—Å—Ç–∞—è –¥–∏–Ω–∞–º–∏–∫–∞
            state = _simulate_step(state, cmd, dt)

    link.disarm()
    print(f"\nüìÅ –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {log_path}")
    print("‚úÖ –î–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ (dry-run). –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–∏ pymavlink –∏ –æ—Ç–∫–ª—é—á–∏ dry_run.")


if __name__ == "__main__":
    main()